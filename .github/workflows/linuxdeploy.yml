 
name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
env:
  version: "continuous"
jobs:
  container_build:
    # The host should always be linux
    runs-on: ubuntu-latest
    name: linuxdeploy-${{matrix.distro}}-${{matrix.arch}}

    strategy:
      fail-fast: false
      matrix:
        distro:
         - bullseye
        arch:
          - aarch64
          - armv7
          - armv6
          - ppc64le
          - s390x
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: uraimo/run-on-arch-action@v2.1.1
        name: Build
        id: build
        with:
          arch: ${{ matrix.arch }}
          distro: ${{ matrix.distro }}
          githubToken: ${{ github.token }}
          setup: mkdir -p "${PWD}/artifacts"
          dockerRunArgs: --volume "${PWD}/artifacts:/artifacts"
          shell: /bin/sh
          install: |
            apt-get update -y
            apt-get install -y build-essential apt-utils apt-transport-https ca-certificates git wget patchelf gnupg ccache appstream xxd desktop-file-utils libjpeg-dev cimg-dev libcairo-dev libfuse-dev libssl-dev cmake gcovr libmagic-dev libjpeg-dev libpng-dev libboost-filesystem-dev libboost-regex-dev autoconf nlohmann-json3-dev libtool m4 automake squashfs-tools libsquashfuse-dev libsquashfuse0 squashfuse

          run: |
            export INSTPATH=linuxdeploy-${{env.version}}_${{matrix.arch}}
            git clone --single-branch --recursive https://github.com/linuxdeploy/linuxdeploy.git
            git clone --single-branch --recursive https://github.com/linuxdeploy/linuxdeploy-plugin-qt.git
            git clone --single-branch --recursive https://github.com/linuxdeploy/linuxdeploy-plugin-appimage.git
            cmake -Slinuxdeploy -Blinuxdeploy/build -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF
            cmake --build linuxdeploy/build
            mkdir -p $INSTPATH/usr/bin
            cp linuxdeploy/build/bin/linuxdeploy $INSTPATH/usr/bin
            cmake -Slinuxdeploy-plugin-qt -Blinuxdeploy-plugin-qt/build -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF
            cmake --build linuxdeploy-plugin-qt/build
            cmake --prefix $INSTPATH --install linuxdeploy-plugin-qt/build
            cmake -Slinuxdeploy-plugin-appimage -Blinuxdeploy-plugin-appimage/build -DCMAKE_INSTALL_PREFIX=/usr -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF
            cmake --build linuxdeploy-plugin-appimage/build
            cmake --prefix $INSTPATH --install linuxdeploy-plugin-appimage/build
            tar -czf $INSTPATH.tar.gz $INSTPATH/
            mv linuxdeploy-*.tar.gz /artifacts/

      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          path: artifacts/linuxdeploy*.tar.gz

  release_assets:
    name: Release
    needs: [container_build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - name: Download Files
      uses: actions/download-artifact@v2

    - name: Deploy Package
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
       repo_token: "${{ secrets.DEPLOYTOKEN }}"
       automatic_release_tag: linuxdeploy_"${{env.version}}"
       prerelease: false
       title: "linuxdeploy ${{env.version}}"
       files: |
         artifact/*
